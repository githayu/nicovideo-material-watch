@mixin textField {
  border: none;
  outline: none;
  border: 1px #e2e2e2 solid;
  border-radius: 2px;
  padding: 4px 8px;

  &:focus {
    border-color: var(--primary-color-1);
  }
}

@mixin flatButton($type: after, $ripple: dark) {
  border: none;
  outline: none;
  border-radius: 2px;
  cursor: pointer;
  transition: all .2s ease-out;
  padding: 8px 16px;
  user-select: none;
  overflow: hidden;
  position: relative;

  @content;

  &::#{$type} {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    border-radius: 50%;
    pointer-events: none;
  }

  &:hover {
    text-decoration: none;

    &::#{$type} {
      @if $ripple == dark {
        animation: ripple-darker 1.5s ease-in forwards;
      } @else if $ripple == light {
        animation: ripple-lighten 1.5s ease-in forwards;
      }
    }
  }

  &:active {
    background-color: rgba(0,0,0,.1);
  }
}

@mixin createRippleAnimation($name, $fromColor, $toType) {
  @keyframes #{$name} {
    0% {
      width: 1px;
      height: 1px;
      border-radius: 100%;
      background-color: $fromColor;
    }
    100% {
      width: 5000%;
      height: 5000%;
      border-radius: 0;

      @if $toType == dark {
        background-color: darken($fromColor, 1%);
      } @else if $toType == light {
        background-color: lighten($fromColor, 1%);
      }
    }
  }
}

@include createRippleAnimation('ripple-darker', rgba(0,0,0,.1), dark);
@include createRippleAnimation('ripple-lighten', hsla(0,0%,100%,.1), light);

@mixin raisedButton--base {
  border: none;
  border-radius: 2px;
  padding: 8px 16px;
  outline: none;
  box-shadow: 0 1px 4px rgba(0,0,0,.3);
  cursor: pointer;
  transition: all .2s ease-out;
  user-select: none;

  &:hover {
    text-decoration: none;
  }

  &:active {
    box-shadow: 0 1px 2px rgba(0,0,0,.3) inset;
  }
}

@mixin raisedButton--default {
  @include raisedButton--base;
  background-color: #fff;

  &:hover {
    background-color: #f2f2f2;
  }

  &:active {
    background-color: #e2e2e2;
  }
}

@mixin raisedButton--primary {
  @include raisedButton--base;
  background-color: var(--primary-color-1);
  color: #fff;

  &:hover {
    background-color: var(--primary-color-4);
  }

  &:active {
    background-color: var(--primary-color-5);
  }
}

@mixin spinner($selector, $circleSize: 40px, $lineWidth: 5px, $lineColor: #1E88E5, $backgroundColor: #fff) {
  #{$selector} {
    $circleRadius: $circleSize / 2;
    $LineWidth: $circleRadius - $lineWidth;

    all: unset;
    width: $circleSize;
    height: $circleSize;
    position: relative;
    border-radius: 100%;
    background-color: $lineColor;
    animation: spinnerRotate 2s $ease-out-cubic infinite;
    background-image: radial-gradient(circle, $backgroundColor $LineWidth, transparent $LineWidth);
    display: block;
    pointer-events: none;

    @content;

    &::before,
    &::after {
      content: '';
      position: absolute;
      width: $circleRadius;
      height: 100%;
      background-color: $backgroundColor;
      transform-origin: $circleRadius;
      animation-duration: 2s;
      animation-timing-function: $ease-in-out-sine;
      animation-iteration-count: infinite;
    }

    &::before {
      animation-name: spinnerRotate;
      animation-delay: .8s;
    }

    &::after {
      animation-name: spinnerRotate2;
    }
  }
}


@keyframes spinnerRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes spinnerRotate2 {
  0%, 25%, 45% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
